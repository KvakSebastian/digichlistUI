{"version":3,"sources":["environments/environment.tsx","common/utils/api.tsx","common/components/Snackbar/snackbar.js","features/login/Login.tsx","features/login/index.js","features/login/admin/AdminNavItem.tsx","common/utils/interceptor.ts","features/login/admin/admins/AdminsServise.ts","features/login/admin/admins/ConfirmDelete.tsx","features/login/admin/admins/AdminAddDialog.tsx","features/login/admin/admins/AdminRow.tsx","features/login/admin/admins/index.js","features/login/admin/admins/Admins.tsx","features/login/admin/nav.tsx","features/login/admin/AdminPanel.tsx","common/guards/LoginRoute.tsx","common/guards/ProtectedRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx","features/login/admin/admins/Admins.module.css"],"names":["environment","login","body","a","axios","post","response","sessionStorage","setItem","data","token","err","logOut","removeItem","isLogged","getItem","SnackbarHandler","snack","setSnack","closeSnack","event","reason","open","Snackbar","autoHideDuration","onClose","Alert","elevation","variant","severity","type","message","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","logo","Login","setAuthInfo","useState","classes","validationSchema","Yup","name","required","password","submitHandler","value","logInfo","email","isAuth","Container","component","maxWidth","CssBaseline","className","Typography","initialValues","onSubmit","validateOnMount","props","noValidate","handleSubmit","TextField","fullWidth","id","label","values","onBlur","handleBlur","onChange","handleChange","helperText","touched","errors","error","Boolean","Button","disabled","isValid","color","itemText","fontSize","active","fontWeight","primary","MainListItems","path","icon","title","ListItem","NavLink","to","exact","activeClassName","ListItemIcon","ListItemText","disableTypography","telegramApiAxios","create","interceptors","request","use","config","console","log","headers","Authorization","status","window","location","reload","getAdmins","get","addAdminData","payload","admin","deleteAdminData","adminsData","delete","updatedList","filter","item","_id","updateAdminData","editAdmin","patch","editId","map","ConfirmDelete","setShowDelDialog","setDeleteAdmin","handleClose","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","onClick","AdminAddDialog","setOpen","setEdit","setAddAdmin","setEditAdmin","username","confirmPassword","min","max","matches","RegExp","oneOf","x","y","isEqual","prop","compareObj","edit","isChanged","add","style","textAlign","AdminRow","adminData","openDel","setOpenDel","TableRow","TableCell","Admins","loading","setLoading","page","setPage","rowsPerPage","setRowsPerPage","setAdminsData","addAdmin","deleteAdmin","useEffect","admins","Math","floor","length","Array","isArray","ceil","styles","loader","CircularProgress","entityHeader","entityHeaderTitle","disableElevation","entityHeaderButton","boxShadow","Table","stickyHeader","aria-label","TableHead","elem","uuidv4","TableBody","slice","index","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","target","navList","Dashboard","SupervisedUserCircle","Group","InsertChartSharp","root","drawer","breakpoints","up","flexShrink","appBar","zIndex","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","padding","closeMenuButton","marginLeft","AdminPanel","useTheme","React","mobileOpen","setMobileOpen","handleDrawerToggle","logoutHandler","List","AppBar","position","Toolbar","IconButton","edge","Hidden","smUp","implementation","Drawer","anchor","direction","ModalProps","keepMounted","xsDown","LoginRoute","Component","authInfo","render","pathname","state","from","ProtectedRoute","App","res","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b81c1b55.chunk.js","sourcesContent":["export const environment = {\n    production: false,\n    BASEURL: 'https://digichlist-api.herokuapp.com/api/',\n};\n","import axios from 'axios';\nimport { environment } from '../../environments/environment';\n\nexport const login = async (body) => {\n    try {\n        const response = await axios.post(`${environment.BASEURL}authorization/login`, body);\n        sessionStorage.setItem('secret-auth-token', response.data.token);\n        return response.data;\n    } catch (err) {\n        return { err: err };\n    }\n};\nexport const logOut = () => {\n    sessionStorage.removeItem('secret-auth-token');\n};\nexport const isLogged = () => {\n    return !!sessionStorage.getItem('secret-auth-token');\n};\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\n\nexport const messages = [];\n\nexport default function SnackbarHandler({ snack, setSnack }) {\n    const closeSnack = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setSnack({ open: false });\n    };\n\n    return (\n        <Snackbar open={snack.open} autoHideDuration={3000} onClose={closeSnack}>\n            <Alert elevation={4} variant='filled' onClose={closeSnack} severity={snack.type}>\n                {snack.message}\n            </Alert>\n        </Snackbar>\n    );\n}\n","import React, { useEffect, useState } from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport { isLogged, login } from './../../common/utils/api';\nimport SnackbarHandler from './../../common/components/Snackbar/snackbar';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    logo: {\n        backgroundColor: '#fafafa',\n    },\n}));\n\nconst Login = ({ setAuthInfo }): JSX.Element => {\n    const [snack, setSnack] = useState({ open: false, message: '', type: 'success' });\n    const classes = useStyles();\n\n    const initialValues = {\n        name: '',\n        password: '',\n    };\n    const validationSchema = Yup.object({\n        name: Yup.string().required(`Обов'язкове поле`),\n        password: Yup.string().required(`Обов'язкове поле`),\n    });\n    const submitHandler = async (value) => {\n        const logInfo = { email: value.name, password: value.password };\n        const response = await login(logInfo);\n        if (response.err) {\n            setSnack({\n                open: true,\n                message: 'Неправильний логін або пароль',\n                type: 'error',\n            });\n        }\n        const isAuth = await isLogged();\n        setAuthInfo(isAuth);\n    };\n\n    return (\n        <Container component='main' maxWidth='xs'>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Typography component='h1' variant='h5'>\n                    Log in\n                </Typography>\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={submitHandler}\n                    validateOnMount={true}>\n                    {(props) => (\n                        <form className={classes.form} noValidate onSubmit={props.handleSubmit}>\n                            <TextField\n                                variant='outlined'\n                                margin='normal'\n                                required\n                                fullWidth\n                                id='name'\n                                label='Name'\n                                name='name'\n                                value={props.values.name}\n                                onBlur={props.handleBlur}\n                                onChange={props.handleChange}\n                                helperText={props.touched.name ? props.errors.name : ''}\n                                error={props.touched.name && Boolean(props.errors.name)}\n                            />\n\n                            <TextField\n                                variant='outlined'\n                                margin='normal'\n                                required\n                                fullWidth\n                                name='password'\n                                label='Password'\n                                type='password'\n                                id='password'\n                                onBlur={props.handleBlur}\n                                value={props.values.password}\n                                onChange={props.handleChange}\n                                helperText={props.touched.password ? props.errors.password : ''}\n                                error={props.touched.password && Boolean(props.errors.password)}\n                            />\n\n                            <Button\n                                disabled={!props.isValid}\n                                type='submit'\n                                fullWidth\n                                variant='contained'\n                                color='primary'\n                                className={classes.submit}>\n                                Log In\n                            </Button>\n                        </form>\n                    )}\n                </Formik>\n            </div>\n            <SnackbarHandler snack={snack} setSnack={setSnack} />\n        </Container>\n    );\n};\nexport default Login;\n","import Login from './Login';\nexport default Login;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    itemText: {\n        fontSize: '1rem',\n    },\n    active: {\n        color: 'white',\n        fontWeight: 500,\n        backgroundColor: theme.palette.primary.main,\n        '& svg': {\n            color: 'white',\n        },\n    },\n}));\n\nexport const MainListItems = ({ path, icon, title }) => {\n    const classes = useStyles();\n    return (\n        <ListItem component={NavLink} to={path} exact activeClassName={classes.active}>\n            <ListItemIcon>{icon}</ListItemIcon>\n            <ListItemText\n                disableTypography\n                className={classes.itemText}\n                color='primary'\n                primary={title}\n            />\n        </ListItem>\n    );\n};\n","import axios from 'axios';\n\nimport { logOut } from './api';\n\nexport const telegramApiAxios = axios.create({});\ntelegramApiAxios.interceptors.request.use((config) => {\n    const token = sessionStorage.getItem('secret-auth-token');\n    console.log(token);\n    if (token) {\n        console.log('sdf');\n        config.headers.Authorization = token;\n    }\n    return config;\n});\n\ntelegramApiAxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n        if (error.response.status === 401) {\n            logOut();\n            window.location.reload();\n        }\n        return error;\n    },\n);\n","import { telegramApiAxios } from '../../../../common/utils/interceptor';\nimport { environment } from '../../../../environments/environment';\nimport axios from 'axios';\n\nexport const getAdmins = async () => await telegramApiAxios.get(`${environment.BASEURL}admin/all`);\n\nexport const addAdminData = async (payload) => {\n    try {\n        const response = await telegramApiAxios.post(\n            `${environment.BASEURL}admin/registration`,\n            payload,\n        );\n        return response.data.admin;\n    } catch (err) {\n        return { err: err };\n    }\n};\n\nexport const deleteAdminData = async (id, adminsData) => {\n    try {\n        const response = await telegramApiAxios.delete(`${environment.BASEURL}admin/delete/${id}`);\n        const updatedList = adminsData.filter((item) => id !== item._id);\n        return updatedList;\n    } catch (err) {\n        return { err: err };\n    }\n};\n\nexport const updateAdminData = async (adminsData, editAdmin) => {\n    try {\n        const response = await telegramApiAxios.patch(\n            `${environment.BASEURL}admin/update/${editAdmin.editId}`,\n            editAdmin.data,\n        );\n        console.log(response.data.admin);\n\n        const updatedList = adminsData.map((item) =>\n            response.data.admin._id === item._id ? response.data.admin : item,\n        );\n        console.log(updatedList);\n        return updatedList;\n    } catch (err) {\n        return { err: err };\n    }\n};\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst ConfirmDelete = ({ open, setShowDelDialog, id, setDeleteAdmin }) => {\n    const handleClose = () => {\n        setShowDelDialog(false);\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby='responsive-dialog-title'>\n            <DialogTitle id='responsive-dialog-title'>Видалити адміна</DialogTitle>\n            <DialogContent>\n                <DialogContentText>Ви впевнені що хочете видалити адміна?</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleClose} color='primary'>\n                    Відмінити\n                </Button>\n                <Button\n                    onClick={() => {\n                        setShowDelDialog(false);\n                        setDeleteAdmin({ id: id, delete: true });\n                    }}\n                    color='primary'\n                    autoFocus>\n                    Видалити\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default ConfirmDelete;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Formik } from 'formik';\n\nimport * as Yup from 'yup';\n\nconst AdminAddDialog = ({ open, setOpen, admin, setEdit, setAddAdmin, setEditAdmin }) => {\n    const initialValues = {\n        username: admin ? admin.username : '',\n        email: admin ? admin.email : '',\n        password: '',\n        confirmPassword: '',\n    };\n\n    const validationSchema = admin\n        ? Yup.object({\n              username: Yup.string()\n                  .required('Заповни поле')\n                  .min(5, \"Коротке ім'я\")\n                  .max(50, \"Задовге ім'я\"),\n              email: Yup.string().email('Введіть коректну пошту').required('Заповни поле'),\n              password: Yup.string()\n                  .min(8, 'Мінімум 8 символів')\n                  .matches(\n                      new RegExp('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'),\n                      'Невідповідний пароль',\n                  ),\n              confirmPassword: Yup.string().oneOf(\n                  [Yup.ref('password'), null],\n                  'Паролі не співпадають',\n              ),\n          })\n        : Yup.object({\n              username: Yup.string()\n                  .required('Заповни поле')\n                  .min(5, \"Коротке ім'я\")\n                  .max(50, \"Задовге ім'я\"),\n              email: Yup.string().email('Введіть коректну пошту').required('Заповни поле'),\n              password: Yup.string()\n                  .required('Заповни поле')\n                  .min(8, 'Мінімум 8 символів')\n                  .matches(\n                      new RegExp('((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,30})'),\n                      'Невідповідний пароль',\n                  ),\n              confirmPassword: Yup.string().oneOf(\n                  [Yup.ref('password'), null],\n                  'Паролі не співпадають',\n              ),\n          });\n    const handleClose = () => {\n        admin ? setEdit(false) : setOpen(false);\n    };\n\n    const compareObj = (x, y) => {\n        let isEqual = true;\n        for (const prop in x) {\n            if (x[prop] !== y[prop]) {\n                isEqual = false;\n                break;\n            }\n        }\n        return isEqual;\n    };\n    return (\n        <div>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                id='form-dialog'\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>\n                    {admin ? 'Редагувати' : 'Добавити'}\n                </DialogTitle>\n                <DialogContent>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        validateOnMount={true}\n                        onSubmit={(data) => {\n                            console.log(data);\n                            console.log(data.password === '');\n                            if (admin) {\n                                if (\n                                    compareObj(\n                                        {\n                                            username: admin.username,\n                                            email: admin.email,\n                                            password: admin.password,\n                                        },\n                                        (data =\n                                            data.password === ''\n                                                ? { ...data, password: admin.password }\n                                                : data),\n                                    )\n                                ) {\n                                    setEditAdmin({\n                                        edit: true,\n                                        data: data,\n                                        isChanged: false,\n                                        editId: admin._id,\n                                    });\n                                } else {\n                                    setEditAdmin({\n                                        edit: true,\n                                        data: data,\n                                        isChanged: true,\n                                        editId: admin._id,\n                                    });\n                                }\n                            } else {\n                                setAddAdmin({\n                                    add: true,\n                                    data: data,\n                                });\n                            }\n                        }}>\n                        {({\n                            isValid,\n                            errors,\n                            touched,\n                            values,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit,\n                        }) => (\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    name='username'\n                                    value={values.username}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    autoFocus\n                                    margin='dense'\n                                    id='username'\n                                    label={'Імя користувача'}\n                                    type='text'\n                                    fullWidth\n                                    error={touched.username && Boolean(errors.username)}\n                                />\n                                <TextField\n                                    name='email'\n                                    value={values.email}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    autoFocus\n                                    margin='dense'\n                                    id='email'\n                                    label={'Пошта'}\n                                    type='text'\n                                    fullWidth\n                                    error={touched.email && Boolean(errors.email)}\n                                />\n                                <TextField\n                                    fullWidth\n                                    margin='dense'\n                                    type='password'\n                                    label={'Введіть пароль'}\n                                    name='password'\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                    helperText={touched.password ? errors.password : ''}\n                                    error={touched.password && Boolean(errors.password)}\n                                />\n                                <TextField\n                                    fullWidth\n                                    margin='dense'\n                                    type='password'\n                                    label={'Підтвердіть пароль'}\n                                    name='confirmPassword'\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.confirmPassword}\n                                    helperText={\n                                        touched.confirmPassword ? errors.confirmPassword : ''\n                                    }\n                                    error={\n                                        touched.confirmPassword && Boolean(errors.confirmPassword)\n                                    }\n                                />\n\n                                <div style={{ margin: '1rem', textAlign: 'center' }}>\n                                    <Button onClick={handleClose} color='primary'>\n                                        {'Відмінити'}\n                                    </Button>\n                                    <Button disabled={!isValid} type='submit' color='primary'>\n                                        {admin ? 'Оновити' : 'Добавити'}\n                                    </Button>\n                                </div>\n                            </form>\n                        )}\n                    </Formik>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default AdminAddDialog;\n","import React, { useState } from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Button } from '@material-ui/core';\n\nimport ConfirmDelete from './ConfirmDelete';\nimport AdminAddDialog from './AdminAddDialog';\n\nconst AdminRow = ({ adminData, id, setDeleteAdmin, setEditAdmin }) => {\n    const { username, email, _id } = adminData;\n    const [edit, setEdit] = useState(false);\n    const [openDel, setOpenDel] = useState(false);\n\n    const dialogOpenHandler = () => {\n        setEdit(true);\n    };\n\n    const dialogOpenDelHandler = () => {\n        setOpenDel(true);\n    };\n    return (\n        <TableRow>\n            <TableCell>{id}</TableCell>\n            <TableCell>{username}</TableCell>\n            <TableCell>{email}</TableCell>\n            <TableCell>\n                <div>\n                    <Button color='primary' onClick={dialogOpenHandler}>\n                        <EditIcon />\n                    </Button>\n                    <Button color='primary' onClick={dialogOpenDelHandler}>\n                        <DeleteIcon />\n                    </Button>\n                </div>\n            </TableCell>\n            {openDel ? (\n                <ConfirmDelete\n                    open={openDel}\n                    setShowDelDialog={setOpenDel}\n                    id={_id}\n                    setDeleteAdmin={setDeleteAdmin}\n                />\n            ) : null}\n            {edit ? (\n                <AdminAddDialog\n                    open={edit}\n                    setOpen={setEdit}\n                    setAddAdmin={null}\n                    admin={adminData}\n                    setEdit={setEdit}\n                    setEditAdmin={setEditAdmin}\n                />\n            ) : null}\n        </TableRow>\n    );\n};\nexport default AdminRow;\n","import { Admins } from './Admins';\nexport default Admins;\n","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport styles from './Admins.module.css';\nimport { getAdmins, addAdminData, deleteAdminData, updateAdminData } from './AdminsServise';\nimport AdminRow from './AdminRow';\nimport AdminAddDialog from './AdminAddDialog';\n\nimport SnackbarHandler from '../../../../common/components/Snackbar/snackbar';\n\nexport const Admins = () => {\n    type Admin = Array<{\n        email: string;\n        username: string;\n        id: string;\n        password: string;\n    }>;\n\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [adminsData, setAdminsData] = useState<Admin | []>([]);\n    const [open, setOpen] = useState(false);\n\n    const [addAdmin, setAddAdmin] = useState({\n        add: false,\n        data: {},\n    });\n\n    const [editAdmin, setEditAdmin] = useState({\n        edit: false,\n        data: {},\n        editId: 0,\n        isChanged: false,\n    });\n\n    const [deleteAdmin, setDeleteAdmin] = useState({\n        delete: false,\n        id: 0,\n    });\n    const [snack, setSnack] = useState({ open: false, message: '', type: 'success' });\n    useEffect(() => {\n        (async function () {\n            const response = await getAdmins();\n            if (typeof response === 'object') {\n                setAdminsData(response.data.admins);\n                setLoading(false);\n                setSnack({\n                    open: true,\n                    message: 'Адміни успішно завантажені',\n                    type: 'success',\n                });\n            } else {\n                setSnack({\n                    open: true,\n                    message: 'Сталася помилка при завантажені',\n                    type: 'error',\n                });\n            }\n        })();\n    }, []);\n\n    useEffect(() => {\n        (async function () {\n            if (addAdmin.add) {\n                const response = await addAdminData(addAdmin.data);\n                console.log(response);\n                if (!response.err) {\n                    setAdminsData([...adminsData, response]);\n                    setOpen(false);\n                    setPage(Math.floor((adminsData.length - 1) / rowsPerPage));\n                    setSnack({\n                        open: true,\n                        message: 'Адміністратора додано',\n                        type: 'success',\n                    });\n                } else {\n                    setOpen(false);\n                    setSnack({\n                        open: true,\n                        message: response.err,\n                        type: 'error',\n                    });\n                }\n            }\n        })();\n    }, [addAdmin]);\n\n    useEffect(() => {\n        (async function () {\n            if (deleteAdmin.delete) {\n                const response = await deleteAdminData(deleteAdmin.id, adminsData);\n                if (Array.isArray(response)) {\n                    setAdminsData(response);\n                    setPage(Math.ceil((adminsData.length - 1) / rowsPerPage) - 1);\n                    setSnack({\n                        open: true,\n                        message: 'Адміністратора видалено',\n                        type: 'success',\n                    });\n                } else {\n                    setOpen(false);\n                    setSnack({\n                        open: true,\n                        message: response.err,\n                        type: 'error',\n                    });\n                }\n            }\n        })();\n    }, [deleteAdmin]);\n\n    useEffect(() => {\n        (async function () {\n            console.log(editAdmin);\n            if (!editAdmin.isChanged && editAdmin.edit) {\n                setSnack({\n                    open: true,\n                    message: 'Нічого не змінено',\n                    type: 'info',\n                });\n            } else {\n                if (editAdmin.edit) {\n                    const response = await updateAdminData(adminsData, editAdmin);\n                    console.log(response);\n                    if (Array.isArray(response)) {\n                        setAdminsData(response);\n                        setOpen(false);\n                        setSnack({\n                            open: true,\n                            message: 'Групу редаговано',\n                            type: 'success',\n                        });\n                    } else {\n                        setSnack({\n                            open: true,\n                            message: response.err,\n                            type: 'error',\n                        });\n                        setOpen(false);\n                    }\n                }\n            }\n        })();\n    }, [editAdmin]);\n\n    const dialogOpenHandler = () => {\n        setOpen(true);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    const fieldsName = ['№', \"Ім'я\", 'Пошта', 'Дії'];\n    return loading ? (\n        <div className={styles.loader}>\n            <CircularProgress />\n        </div>\n    ) : (\n        <div>\n            <div className={styles.entityHeader}>\n                <Typography\n                    component='h2'\n                    variant='h4'\n                    color='textPrimary'\n                    className={styles.entityHeaderTitle}>\n                    {'Адміністратори'}\n                </Typography>\n                <Button\n                    onClick={dialogOpenHandler}\n                    disableElevation\n                    variant='contained'\n                    color='primary'\n                    className={styles.entityHeaderButton}>\n                    <AddCircle />\n                    {'Додати адміна'}\n                </Button>\n            </div>\n            <div style={{ boxShadow: '0.5rem 1rem 2rem gray' }}>\n                <Table stickyHeader aria-label='sticky table'>\n                    <TableHead>\n                        <TableRow>\n                            {fieldsName.map((elem) => (\n                                <TableCell key={uuidv4()}>{elem}</TableCell>\n                            ))}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {adminsData\n                            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                            .map((adminData, index) => (\n                                <AdminRow\n                                    adminData={adminData}\n                                    key={uuidv4()}\n                                    id={index}\n                                    setEditAdmin={setEditAdmin}\n                                    setDeleteAdmin={setDeleteAdmin}\n                                />\n                            ))}\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25, 50]}\n                    component='div'\n                    count={adminsData.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </div>\n            <SnackbarHandler snack={snack} setSnack={setSnack} />\n            <AdminAddDialog\n                open={open}\n                setOpen={setOpen}\n                setAddAdmin={setAddAdmin}\n                admin={null}\n                setEdit={null}\n                setEditAdmin={null}\n            />\n        </div>\n    );\n};\n","import React from 'react';\nimport {\n    AccountBalance,\n    CollectionsBookmark,\n    Dashboard,\n    Dns,\n    Group,\n    InsertChartSharp,\n    SupervisedUserCircle,\n    List,\n} from '@material-ui/icons';\n\nexport const navList: any = [\n    {\n        path: '/admin/dashboard',\n        icon: <Dashboard />,\n        title: 'Головна',\n    },\n    {\n        path: '/admin/admins',\n        icon: <SupervisedUserCircle />,\n        title: 'Адміни',\n    },\n    {\n        path: '/admin/users',\n        icon: <Group />,\n        title: 'Користувачі',\n    },\n    {\n        path: '/admin/defects',\n        icon: <InsertChartSharp />,\n        title: 'Дефекти',\n    },\n];\n","import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { NavLink } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\n\n// import VisibleItemList from '../containers/VisibleItemList';\nimport { MainListItems } from './AdminNavItem';\nimport Admins from './admins';\nimport { navList } from './nav';\nimport { logOut } from '../../../common/utils/api';\n\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    closeMenuButton: {\n        marginRight: 'auto',\n        marginLeft: 0,\n    },\n    title: {\n        flexGrow: 1,\n    },\n    itemText: {\n        fontSize: '1rem',\n    },\n    active: {\n        color: 'white',\n        fontWeight: 500,\n        backgroundColor: theme.palette.primary.main,\n        '& svg': {\n            color: 'white',\n        },\n    },\n}));\nconst AdminPanel = ({ setAuthInfo }): JSX.Element => {\n    const dummyCategories = ['Адміни', 'Дефекти', 'Користувачі', 'Репорт'];\n    const classes = useStyles();\n    const theme = useTheme();\n    const [mobileOpen, setMobileOpen] = React.useState(false);\n    function handleDrawerToggle() {\n        setMobileOpen(!mobileOpen);\n    }\n    const logoutHandler = async () => {\n        logOut();\n        setAuthInfo(false);\n    };\n    const drawer = (\n        <div>\n            <List>\n                {navList.map(({ path, icon, title }, index) => (\n                    <MainListItems key={index + title} path={path} icon={icon} title={title} />\n                ))}\n            </List>\n        </div>\n    );\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position='fixed' className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color='inherit'\n                        aria-label='Open drawer'\n                        edge='start'\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}>\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant='h6' className={classes.title}>\n                        Digichlist\n                    </Typography>\n                    <Button color='inherit' onClick={logoutHandler}>\n                        Logout\n                    </Button>\n                </Toolbar>\n            </AppBar>\n\n            <nav className={classes.drawer}>\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                <Hidden smUp implementation='css'>\n                    <Drawer\n                        variant='temporary'\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={mobileOpen}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true, // Better open performance on mobile.\n                        }}>\n                        <IconButton\n                            onClick={handleDrawerToggle}\n                            className={classes.closeMenuButton}>\n                            <CloseIcon />\n                        </IconButton>\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n                <Hidden xsDown implementation='css'>\n                    <Drawer\n                        className={classes.drawer}\n                        variant='permanent'\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}>\n                        <div className={classes.toolbar} />\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </nav>\n            <div className={classes.content}>\n                <div className={classes.toolbar} />\n                <Switch>\n                    <Route path='/admin/admins' component={Admins} />\n                </Switch>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminPanel;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nconst LoginRoute = ({ component: Component, path, authInfo, setAuthInfo }): JSX.Element => {\n    return (\n        <Route\n            render={(props) => {\n                if (!authInfo) {\n                    return <Component setAuthInfo={setAuthInfo} path={path} {...props} />;\n                } else {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: '/admin/dashboard',\n                                state: { from: props.location },\n                            }}\n                        />\n                    );\n                }\n            }}\n        />\n    );\n};\nexport default LoginRoute;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nconst ProtectedRoute = ({ component: Component, path, authInfo, setAuthInfo }) => {\n    return (\n        <Route\n            render={(props) => {\n                if (authInfo) {\n                    return <Component setAuthInfo={setAuthInfo} path={path} {...props} />;\n                } else {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: '/login',\n                                state: { from: props.location },\n                            }}\n                        />\n                    );\n                }\n            }}\n        />\n    );\n};\nexport default ProtectedRoute;\n","import React, { useState, useEffect } from 'react';\nimport Login from './features/login';\nimport AdminPanel from './features/login/admin/AdminPanel';\nimport LoginRoute from './common/guards/LoginRoute';\nimport { isLogged } from './common/utils/api';\n\nimport ProtectedRoute from './common/guards/ProtectedRoute';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\n\nfunction App(): JSX.Element {\n    const [authInfo, setAuthInfo] = useState(false);\n    useEffect(() => {\n        async function isAuth() {\n            const res = await isLogged();\n            setAuthInfo(res);\n        }\n        isAuth();\n    }, []);\n    return (\n        <Switch>\n            <Redirect path='/' to='/login' component={Login} exact />\n            <Redirect path='/admin' exact to='/admin/dashboard' />\n            <ProtectedRoute\n                authInfo={authInfo}\n                setAuthInfo={setAuthInfo}\n                path='/admin'\n                component={AdminPanel}\n            />\n            <LoginRoute\n                setAuthInfo={setAuthInfo}\n                authInfo={authInfo}\n                path='/login'\n                component={Login}\n            />\n            <Route path='*' component={() => <h1>404</h1>} />\n        </Switch>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"groups\":\"Admins_groups__3CbHA\",\"entityHeader\":\"Admins_entityHeader__2EqAo\",\"MuiSelect-root\":\"Admins_MuiSelect-root__HMvOD\",\"entityHeaderTitle\":\"Admins_entityHeaderTitle__3IKMk\",\"entityHeaderButton\":\"Admins_entityHeaderButton__3sAEW\",\"loader\":\"Admins_loader__3UQXi\",\"MuiInput-formControl\":\"Admins_MuiInput-formControl__1TfHR\",\"button\":\"Admins_button__37JRn\"};"],"sourceRoot":""}